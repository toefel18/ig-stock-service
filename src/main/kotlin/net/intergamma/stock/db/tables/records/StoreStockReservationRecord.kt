/*
 * This file is generated by jOOQ.
 */
package net.intergamma.stock.db.tables.records


import java.time.OffsetDateTime

import net.intergamma.stock.db.tables.StoreStockReservation

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * Stock of a product in a store
 */
@Suppress("warnings")
open class StoreStockReservationRecord private constructor() : UpdatableRecordImpl<StoreStockReservationRecord>(StoreStockReservation.STORE_STOCK_RESERVATION) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var storeId: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var productId: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var userId: String
        set(value): Unit = set(3, value)
        get(): String = get(3) as String

    open var reservedStock: Long?
        set(value): Unit = set(4, value)
        get(): Long? = get(4) as Long?

    open var expiresAt: OffsetDateTime
        set(value): Unit = set(5, value)
        get(): OffsetDateTime = get(5) as OffsetDateTime

    open var createdTimestampUtc: OffsetDateTime?
        set(value): Unit = set(6, value)
        get(): OffsetDateTime? = get(6) as OffsetDateTime?

    open var modifiedTimestampUtc: OffsetDateTime?
        set(value): Unit = set(7, value)
        get(): OffsetDateTime? = get(7) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised StoreStockReservationRecord
     */
    constructor(id: Long? = null, storeId: String, productId: String, userId: String, reservedStock: Long? = null, expiresAt: OffsetDateTime, createdTimestampUtc: OffsetDateTime? = null, modifiedTimestampUtc: OffsetDateTime? = null): this() {
        this.id = id
        this.storeId = storeId
        this.productId = productId
        this.userId = userId
        this.reservedStock = reservedStock
        this.expiresAt = expiresAt
        this.createdTimestampUtc = createdTimestampUtc
        this.modifiedTimestampUtc = modifiedTimestampUtc
        resetTouchedOnNotNull()
    }
}
